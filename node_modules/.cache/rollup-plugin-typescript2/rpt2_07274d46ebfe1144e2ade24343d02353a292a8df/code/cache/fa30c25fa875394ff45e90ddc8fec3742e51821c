{"code":"/**\n * 首字母大写\n * @param {*} str\n * @returns\n */\nconst titleCase = (str) => {\n    return str.replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\n};\n/**\n *首大写字母转小写\n */\nconst uncapitalize = (str) => {\n    if (str == null || str.length === 0) {\n        return str;\n    }\n    return str.replace(/^[A-Z]/, function (matchStr) {\n        return matchStr.toLocaleLowerCase();\n    });\n};\n/**\n *大写转小写，小写转大写\n */\nconst swapCase = (str) => {\n    return str.replace(/[a-z]/gi, (matchStr) => {\n        if (matchStr >= 'A' && matchStr <= 'Z') {\n            return matchStr.toLocaleLowerCase();\n        }\n        else if (matchStr >= 'a' && matchStr <= 'z') {\n            return matchStr.toLocaleUpperCase();\n        }\n    });\n};\n/**\n * 下划转驼峰\n * @param {*} str\n * @returns\n */\nconst camelCase = (str) => {\n    return str.replace(/_[a-z]/g, (str1) => str1.substr(-1).toUpperCase());\n};\n/**\n *格式化时间\n * @param {*} str\n * @returns\n */\nconst parseTime = (time, pattern) => {\n    if (!time) {\n        return null;\n    }\n    const format = pattern || '{y}-{m}-{d} {h}:{i}:{s}';\n    let date;\n    if (typeof time === 'object') {\n        date = time;\n    }\n    else {\n        if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n            time = parseInt(time);\n        }\n        else if (typeof time === 'string') {\n            time = time\n                .replace(new RegExp(/-/gm), '/')\n                .replace('T', ' ')\n                .replace(new RegExp(/\\.[\\d]{3}/gm), '');\n        }\n        if (typeof time === 'number' && time.toString().length === 10) {\n            time = time * 1000;\n        }\n        date = new Date(time);\n    }\n    const formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay(),\n    };\n    const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n        let value = formatObj[key];\n        // Note: getDay() returns 0 on Sunday\n        if (key === 'a') {\n            return ['日', '一', '二', '三', '四', '五', '六'][value];\n        }\n        if (result.length > 0 && value < 10) {\n            value = '0' + value;\n        }\n        return value || 0;\n    });\n    return time_str;\n};\nexport { titleCase, camelCase, parseTime, uncapitalize, swapCase };\n","references":[],"dts":{"name":"/Users/taiyi/person/vaevas-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/formats/index.d.ts","writeByteOrderMark":false,"text":"/**\n * 首字母大写\n * @param {*} str\n * @returns\n */\ndeclare const titleCase: (str: string) => string;\n/**\n *首大写字母转小写\n */\ndeclare const uncapitalize: (str: string) => string;\n/**\n *大写转小写，小写转大写\n */\ndeclare const swapCase: (str: string) => string;\n/**\n * 下划转驼峰\n * @param {*} str\n * @returns\n */\ndeclare const camelCase: (str: string) => string;\n/**\n *格式化时间\n * @param {*} str\n * @returns\n */\ndeclare const parseTime: (time?: Date | string | number, pattern?: string) => string | null;\nexport { titleCase, camelCase, parseTime, uncapitalize, swapCase };\n"}}
