{"code":"/**\n * 手机号校验\n */\nconst mobileCheck = (value) => /^[1][3,4,5,7,8][0-9]{9}$/.test(value);\n/*\n * 身份证号码校验\n */\nconst idCardCheck = (value) => /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(value);\n/**\n * 邮箱校验\n */\nconst emailCheck = (value) => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(value);\n/**\n * 字符串是包含字符\n * @param {*} input\n * @returns\n */\nconst isAlpha = (input) => {\n    return /^[a-z]+$/i.test(input);\n};\n/**\n * 只包含字母、空格\n * @param {*} input\n * @returns\n */\nconst isAlphaSpace = (input) => {\n    return /^[a-z\\s]*$/i.test(input);\n};\n/**\n * 只包含字母、数字\n */\nconst isAlphanumeric = (input) => {\n    return /^[a-z0-9]+$/i.test(input);\n};\n/**\n *\n * 只包含字母、数字和空格\n */\nconst isAlphanumericSpace = (input) => {\n    return /^[a-z0-9\\s]*$/i.test(input);\n};\n/**\n * 数字\n * @param {*} input\n * @returns\n */\nconst isNumeric = (input) => {\n    return /^(?:[1-9]\\d*|0)(?:\\.\\d+)?$/.test(input);\n};\n/**\n * 小数\n */\nconst isDecimal = (input) => {\n    return /^[-+]?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n};\n/**\n * 负小数\n */\nconst isNegativeDecimal = (input) => {\n    return /^\\-?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n};\n/**\n * 正小数\n */\nconst isPositiveDecimal = (input) => {\n    return /^\\+?(?:0|[1-9]\\d*)\\.\\d+$/.test(input);\n};\n/**\n * 整数\n */\nconst isInteger = (input) => {\n    return /^[-+]?(?:0|[1-9]\\d*)$/.test(input);\n};\n/**\n * 正整数\n */\nconst isPositiveInteger = (input) => {\n    return /^\\+?(?:0|[1-9]\\d*)$/.test(input);\n};\n/**\n * 负整数\n */\nconst isNegativeInteger = (input) => {\n    return /^\\-?(?:0|[1-9]\\d*)$/.test(input);\n};\n/**\n * 只包含数字和空格\n */\nconst isNumericSpace = (input) => {\n    return /^[\\d\\s]*$/.test(input);\n};\nexport { mobileCheck, idCardCheck, emailCheck, isAlpha, isAlphaSpace, isAlphanumeric, isAlphanumericSpace, isNumeric, isDecimal, isNegativeDecimal, isPositiveDecimal, isInteger, isPositiveInteger, isNegativeInteger, isNumericSpace, };\n","references":[],"dts":{"name":"/Users/taiyi/person/vaevas-utils/node_modules/.cache/rollup-plugin-typescript2/placeholder/validates/index.d.ts","writeByteOrderMark":false,"text":"/**\n * 手机号校验\n */\ndeclare const mobileCheck: (value: string) => boolean;\ndeclare const idCardCheck: (value: string) => boolean;\n/**\n * 邮箱校验\n */\ndeclare const emailCheck: (value: string) => boolean;\n/**\n * 字符串是包含字符\n * @param {*} input\n * @returns\n */\ndeclare const isAlpha: (input: string) => boolean;\n/**\n * 只包含字母、空格\n * @param {*} input\n * @returns\n */\ndeclare const isAlphaSpace: (input: string) => boolean;\n/**\n * 只包含字母、数字\n */\ndeclare const isAlphanumeric: (input: string) => boolean;\n/**\n *\n * 只包含字母、数字和空格\n */\ndeclare const isAlphanumericSpace: (input: string) => boolean;\n/**\n * 数字\n * @param {*} input\n * @returns\n */\ndeclare const isNumeric: (input: string) => boolean;\n/**\n * 小数\n */\ndeclare const isDecimal: (input: string) => boolean;\n/**\n * 负小数\n */\ndeclare const isNegativeDecimal: (input: string) => boolean;\n/**\n * 正小数\n */\ndeclare const isPositiveDecimal: (input: string) => boolean;\n/**\n * 整数\n */\ndeclare const isInteger: (input: string) => boolean;\n/**\n * 正整数\n */\ndeclare const isPositiveInteger: (input: string) => boolean;\n/**\n * 负整数\n */\ndeclare const isNegativeInteger: (input: string) => boolean;\n/**\n * 只包含数字和空格\n */\ndeclare const isNumericSpace: (input: string) => boolean;\nexport { mobileCheck, idCardCheck, emailCheck, isAlpha, isAlphaSpace, isAlphanumeric, isAlphanumericSpace, isNumeric, isDecimal, isNegativeDecimal, isPositiveDecimal, isInteger, isPositiveInteger, isNegativeInteger, isNumericSpace, };\n"}}
